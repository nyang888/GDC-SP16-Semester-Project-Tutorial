<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_Shell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xSpeed=0;
ySpeed=-2;
grounded=false;
grav=1;
image_angle=irandom_range(0,180);
rotation_speed=10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///COLLISION

    //sets max fall speed
 if (ySpeed &lt;10)
    {   
        ySpeed+=grav;
    }

    //horizontal collision
    if(place_meeting(x + xSpeed, y,O_Ground))
    {
        while(!place_meeting(x+sign(xSpeed),y,O_Ground))
        {
            x += sign(xSpeed);
            
        }
        xSpeed *=-1;
    }
    
    //vertical collision
 
    if(place_meeting(x, y + ySpeed,O_Ground))
    {
        while(!place_meeting(x,y+sign(ySpeed),O_Ground))
        {
            y += sign(ySpeed);
        }
        ySpeed=ySpeed/2;
        if(ySpeed&lt;1)
        {   
            ySpeed=0;
        }
        ySpeed*=-1;
        xSpeed=xSpeed/2;
        grounded=true;
        rotation_speed=rotation_speed/2;
        
    }
    else
    {
        grounded=false;
    }
    
//Always add xSpeed and ySpeed to your x,y coordinates    
x+=xSpeed;
y+=ySpeed;
image_angle+=rotation_speed;
if(abs(ySpeed&lt;1))
{
   // ySpeed=0;
}
if(abs(xSpeed&lt;1))
{
   // xSpeed=0;
}
//stop the shell from rotating
if(abs(rotation_speed&lt;3))
{
    rotation_speed=0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
