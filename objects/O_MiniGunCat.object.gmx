<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_Mini_Charge</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Enemy_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0;
hp=15;
charge_time=0+irandom(10);
charge_time_max=50;
attack_time=0;
attack_time_max=20;
phase=2;
attack=1;
charge=2;

left=-1;
right=1;
facing=left;

is_flashed=false;
flash_timer=0;
flash_Max=2;



while(!place_meeting(x,y+1,O_Ground))
{
    y+=1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase == charge) {
    image_speed = 0;
    sprite_index = S_Mini_Charge;
    charge_time += 1;
    if (charge_time == charge_time_max) {
        charge_time = 0;
        phase = attack;
    }
}

if (phase == attack) {
    image_speed = .25;
    if (sprite_index == S_Mini_Attack || sprite_index == S_Mini_Attack_R) {

        image_speed = 1;
        attack_time += 1;
        var Bullet;
        if (facing == left) {
            if (floor(image_index) == 0) {
                Bullet = instance_create(x, y + sprite_height / 2, O_Mini_Bullet);
                Bullet.xSpeed *= facing;
            }
        } else {
            if (floor(image_index) == 0) {
                Bullet = instance_create(x + sprite_width, y + sprite_height / 2, O_Mini_Bullet);
                Bullet.xSpeed *= facing;
            }
        }
        
        instance_create(x, y, O_Shake_Small);
    }
    if (attack_time == attack_time_max) {
        attack_time = 0;
        phase = charge;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///flashed
if(is_flashed=true)
{
    flash_timer+=1;
    image_blend=c_red;

    if(flash_timer==flash_Max)
    {
        is_flashed=false;
        image_blend=c_white;
        flash_timer=0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEATH
if(hp==0)
{
   audio_play_sound(M_Explode,0,false);
     
   instance_create(x,y,O_Explosion);
      var Minigun=instance_create(x,y,O_MiniGun);
    Minigun.xSpeed=5*facing;
    instance_destroy();
 
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_index==2 and sprite_index=S_Mini_Charge)
{
    audio_play_sound(M_Minigun_Set,0,false);
}
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// FACING CONTROL

if(x+sprite_width&gt;O_Player.x)
{
    facing=left;
}
else if (x+sprite_width&lt;O_Player.x)
{
    facing=right;
} 

if(facing == right) {
    if( sprite_index == S_Mini_Charge ){
        sprite_index = S_Mini_Charge_R;
    } else if( sprite_index == S_Mini_Attack ) {
        sprite_index = S_Mini_Attack_R;
    }
} else {
    if( sprite_index == S_Mini_Charge_R ){
        sprite_index = S_Mini_Charge;
    } else if( sprite_index == S_Mini_Attack_R ) {
        sprite_index = S_Mini_Attack;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="O_Bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Health Reduction

hp-=1;


is_flashed=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index==S_Mini_Charge || sprite_index==S_Mini_Charge_R)
{
    sprite_index=S_Mini_Attack;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
